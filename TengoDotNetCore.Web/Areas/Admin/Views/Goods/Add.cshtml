@model Goods
<div class="page-container">
    <form class="form form-horizontal" id="form1">
        <div class="text-danger"></div>
        <div class="row cl">
            <label asp-for="Name" class="form-label col-xs-4 col-sm-2"><span class="c-red">*</span>标题：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input asp-for="Name" class="input-text" />
                <span asp-validation-for="Name" class="c-danger"></span>
            </div>
        </div>
        <div class="row cl">
            <label asp-for="NameEn" class="form-label col-xs-4 col-sm-2">外文名：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input asp-for="NameEn" class="input-text" />
                <span asp-validation-for="NameEn" class="c-danger"></span>
            </div>
        </div>
        <div class="row cl">
            <label asp-for="Status" class="form-label col-xs-4 col-sm-2">销售状态：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <span class="select-box">
                    <select asp-for="Status" class="select">
                        <option value="1">正常销售</option>
                        <option value="2">销售但不显示</option>
                        <option value="3">已下架</option>
                        <option value="4">待审核</option>
                    </select>
                </span>
            </div>
        </div>
        <div class="row cl">
            <label asp-for="Price" class="form-label col-xs-4 col-sm-2"><span class="c-red">*</span>价格：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input asp-for="Price" class="input-text" />
                <span asp-validation-for="Price" class="c-danger"></span>
            </div>
        </div>
        <div class="row cl">
            <label asp-for="CoverImg" class="form-label col-xs-4 col-sm-2">封面图：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input asp-for="CoverImg" class="input-text" type="hidden" />
                <img id="CoverImgImg" src="" style="width:100px;height:100px;" />
                <a class="btn btn-default radius ml-10" id="btn-upload">上传封面图片</a>
            </div>
        </div>
        <div class="row cl">
            <label class="form-label col-xs-4 col-sm-2">所属分类：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <ul class="Huifold" id="Huifold">
                    <li class="item">
                        <h4>点击打开或折叠 <b>-</b></h4>
                        <ul class="info" id="Category_ID"></ul>
                    </li>
                </ul>
            </div>
        </div>
        <div class="row cl">
            <label for="EditorContent" class="form-label col-xs-4 col-sm-2">PC版详情：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <textarea id="EditorContent" style="width:100%;height:400px;"></textarea>
                <input asp-for="Content" type="hidden" />
            </div>
        </div>
        <div class="row cl">
            <label for="EditorMContent" class="form-label col-xs-4 col-sm-2">移动版详情：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <textarea id="EditorMContent" style="width:100%;height:400px;"></textarea>
                <input asp-for="MContent" type="hidden" />
            </div>
        </div>
        <div class="row cl">
            <label asp-for="Keywords" class="form-label col-xs-4 col-sm-2">SEO关键字：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input asp-for="Keywords" class="input-text" />
                <span asp-validation-for="Keywords" class="c-danger"></span>
            </div>
        </div>
        <div class="row cl">
            <label asp-for="Description" class="form-label col-xs-4 col-sm-2">SEO描述：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input asp-for="Description" class="input-text" />
                <span asp-validation-for="Description" class="c-danger"></span>
            </div>
        </div>
        <div class="row cl">
            <label asp-for="Sort" class="form-label col-xs-4 col-sm-2">排序：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <input asp-for="Sort" class="input-text" value="1" />
                <span asp-validation-for="Sort" class="c-danger"></span>
            </div>
        </div>
        <div class="row cl">
            <div class="col-xs-8 col-sm-9 col-xs-offset-4 col-sm-offset-2">
                <a id="btn-submit" class="btn btn-primary radius">
                    <i class="Hui-iconfont">&#xe632;</i> 保存并提交审核
                </a>
                <button onClick="removeIframe();" class="btn btn-default radius" type="button">&nbsp;&nbsp;取消&nbsp;&nbsp;</button>
            </div>
        </div>
    </form>
</div>

@section Scripts{
    <script>
        $(function () {
            $('.skin-minimal input').iCheck({
                checkboxClass: 'icheckbox-blue',
                radioClass: 'iradio-blue',
                increaseArea: '20%'
            });

            /*5个参数顺序不可打乱，分别是：相应区,隐藏显示的内容,速度,类型,事件*/
            $.Huifold("#Huifold .item h4", "#Huifold .item .info", "fast", 1, "click");

            var editor;
            var editor2;
            //初始化内容编辑器
            KindEditor.ready(function (K) {
                //初始化PC版HTML编辑器
                editor = K.create('#EditorContent', {
                    uploadJson: '/admin/kindEditor/upload',
                    fileManagerJson: '/admin/kindEditor/fileManager',
                    allowFileManager: true
                });
                //初始化移动版HTML编辑器
                editor2 = K.create('#EditorMContent', {
                    uploadJson: '/admin/kindEditor/upload',
                    fileManagerJson: '/admin/kindEditor/fileManager',
                    allowFileManager: true
                });
                //封面图上传
                K('#btn-upload').click(function () {
                    editor.loadPlugin('image', function () {
                        editor.plugin.imageDialog({
                            showRemote: true,
                            imageUrl: K('#CoverImg').val(),
                            clickFn: function (url, title, width, height, border, align) {
                                K('#CoverImg').val(url);
                                $('#CoverImgImg').prop("src", url);
                                editor.hideDialog();
                            }
                        });
                    });
                });
            });

            //树状分类的html
            var tree = '';

            @foreach (var item in ViewData["Category"] as List<Category>) {
                @Html.Raw("data.push({Id:" + item.Id + ",Name:'" + item.Name + "',Level:" + item.Level + ",ParID:" + item.ParID + ",Checked:false});")
            }

            //创建分类结点，供递归调用
            function createNode(parID) {
                for (var i = 0; i < data.length; i++) {
                    if (data[i].ParID === parID) {
                        //定义空格占位符,用来填补开始处偏移的位置
                        var space = "";
                        //如果不是一级结点的话,要弄一点偏移
                        if (data[i].ParID > 0) {
                            for (var j = 0; j < data[i].Level; j++) {
                                space += "&ensp;&ensp;";
                            }
                            //如果不是一级结点的话，要加上一个 ├ 符号
                            space += "├&nbsp;";
                        }
                        var li = '<li>' + space;
                        li += '<input type="checkbox" name="categoryIds" id="cid_' + data[i].Id + '" value="' + data[i].Id + '" onclick="categoryClick(this)"/>';
                        li += '<label for="cid_' + data[i].Id + '">' + data[i].Name + '</label>';
                        li += '</li>';
                        tree += li;
                        createNode(data[i].Id);
                    }
                }
            }
            //从根节点开始生成checkbox
            createNode(0);

            $("#Category_ID").html(tree);

            $("#btn-submit").click(function () {
                /*
                 * 按照我以前的做法，我肯定是input里面不写字段的限制，并且只会在后面的js里面写上一堆的限制，
                 * 然后提交的时候在校验rules是否符合要求。
                 * 但是按照上面那样的做法的话，非常地不妥。那样需要我手动在JS写字段限制的规则，导致大大增多了工作量，这是非常反人类的！
                 * 这一句代码其实就是对表单再进行一次校验，并且判断校验是否通过，可谓一举两得
                 */
                if (!$("#form1").valid()) {
                    return;
                }
                editor.sync();
                editor2.sync();
                $("#Content").val($("#EditorContent").val());
                $("#MContent").val($("#EditorMContent").val());
                $.ajax({
                    url: "/admin/goods/add",
                    type: "POST",
                    data: $("#form1").serialize(),
                    dataType: "JSON",
                    success: function (data) {
                        if (data.code == 1000) {
                            layer.msg(data.msg, { icon: 1, time: 1000 });
                            setTimeout(function () {
                                var index = parent.layer.getFrameIndex(window.name);
                                console.log(window.name);
                                parent.location.reload();
                                parent.$('.btn-refresh').click();
                                parent.layer.close(index);
                            }, 1500);
                        }
                        else if (data.code == 2000) {
                            layer.msg(data.msg, { icon: 1, time: 1000 });
                            setTimeout(function () { location.href = "/admin/manager/login"; }, 1000);
                        }
                        else {
                            layer.msg(data.msg, { icon: 1, time: 1000 });
                        }
                    },
                    error: function () {
                        layer.msg("系统繁忙，请稍后再试......", { icon: 1, time: 1000 });
                    }
                });
            });
        });

        //数据集合
        var data = new Array();

        ///将所有祖先设置为选中
        function setCbParChecked(parID) {
            for (var i = 0; i < data.length; i++) {
                if (data[i].Id === parID) {
                    data[i].Checked = true;
                    setCbParChecked(data[i].ParID);
                }
            }
        }

        //将所有后代设置为不选中
        function serCbChildUnChecked(id) {
            for (var i = 0; i < data.length; i++) {
                if (data[i].ParID === id) {
                    data[i].Checked = false;
                    serCbChildUnChecked(data[i].Id);
                }
            }
        }

        //分类的checkbox点击事件
        function categoryClick(item) {
            var checked = $(item).prop("checked");
            var value = $(item).val();
            if (checked) {
                for (var i = 0; i < data.length; i++) {
                    //对集合进行遍历，如果遇到自己或者自己的父结点则设置选中
                    if (data[i].Id == value) {
                        data[i].Checked = true;
                        //设置父结点为选中
                        setCbParChecked(data[i].ParID);
                    }
                }
            }
            else {
                for (var i = 0; i < data.length; i++) {
                    if (data[i].Id == value) {
                        data[i].Checked = false;
                        //除了自己，还要把自己的所有后代设置为不选中
                        serCbChildUnChecked(data[i].Id);
                    }
                }
            }
            checkCb();
        }

        //检查设置分类的选中属性
        function checkCb() {
            for (var i = 0; i < data.length; i++) {
                if (data[i].Checked) {
                    $("#cid_" + data[i].Id).prop("checked", "checked");
                }
                else {
                    $("#cid_" + data[i].Id).removeProp("checked");
                }
            }
        }
    </script>
}}
